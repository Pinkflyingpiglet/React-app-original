{"ast":null,"code":"var _jsxFileName = \"/Users/gordon/Desktop/react/client/src/components/share/Share.jsx\",\n  _s = $RefreshSig$();\nimport \"./share.css\";\nimport PermMediaIcon from '@mui/icons-material/PermMedia';\nimport LabelIcon from '@mui/icons-material/Label';\nimport PlaceIcon from '@mui/icons-material/Place';\nimport EmojiEmotionsIcon from '@mui/icons-material/EmojiEmotions';\nimport { useContext, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\n\n//IMPORTANT: for uploading images, will have to use CDN tool eg Amazon (S3?), Firebase \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Share() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const desc = useRef();\n  const [file, setFile] = useState(null);\n  const submitHandler = async e => {\n    e.preventDefault();\n    const newPost = {\n      userId: user._id,\n      desc: desc.current.value\n    };\n    // the following means: if there is a file, new FormData will be created, the file as well as its name will be indicated. And it will also 'try' to upload the file\n    // the following 'if' statement will have to be edited in the future. perhaps to adapt to another tool\n    if (file) {\n      const data = new FormData();\n      const fileName = file.name;\n      data.append(\"file\", file);\n      data.append(\"name\", fileName);\n      // line below will add the img to the newPost \n      newPost.img = fileName;\n      try {\n        // the new post with the attachment will be uploaded\n        await axios.post(\"/upload\", data);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    try {\n      // the new post with the words will be uploaded\n      await axios.post(\"/posts\", newPost);\n      // reload will refresh the page\n      // IMPORTANT: can also create a 'post' context and update 'post' state. Will need to research how to do this.\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"share\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shareWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shareTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.profilePicture ? PF + user.profilePicture : PF + \"person/noAvatar.png\",\n          alt: \"\",\n          className: \"shareProfileImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"What is your main complaint \" + user.username + \"?\",\n          className: \"shareInput\",\n          ref: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"shareHr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"shareBottom\",\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shareOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file\",\n            className: \"shareOption\",\n            children: [/*#__PURE__*/_jsxDEV(PermMediaIcon, {\n              htmlColor: \"tomato\",\n              className: \"shareIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"shareOptionText\",\n              children: \"Photo or Video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                display: \"none\"\n              },\n              type: \"file\",\n              id: \"file\",\n              accept: \".png,.jpg,.jpeg,.pdf\",\n              onChange: e => setFile(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shareOption\",\n            children: [/*#__PURE__*/_jsxDEV(LabelIcon, {\n              htmlColor: \"blue\",\n              className: \"shareIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"shareOptionText\",\n              children: \"Tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shareOption\",\n            children: [/*#__PURE__*/_jsxDEV(PlaceIcon, {\n              htmlColor: \"green\",\n              className: \"shareIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"shareOptionText\",\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shareOption\",\n            children: [/*#__PURE__*/_jsxDEV(EmojiEmotionsIcon, {\n              htmlColor: \"goldenrod\",\n              className: \"shareIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"shareOptionText\",\n              children: \"Emotions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"shareButton\",\n          type: \"submit\",\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Share, \"cC0WN0Qycy1whnUcsI6kPYl96UY=\");\n_c = Share;\nvar _c;\n$RefreshReg$(_c, \"Share\");","map":{"version":3,"names":["PermMediaIcon","LabelIcon","PlaceIcon","EmojiEmotionsIcon","useContext","useRef","useState","AuthContext","axios","jsxDEV","_jsxDEV","Share","_s","user","PF","process","env","REACT_APP_PUBLIC_FOLDER","desc","file","setFile","submitHandler","e","preventDefault","newPost","userId","_id","current","value","data","FormData","fileName","name","append","img","post","err","console","log","window","location","reload","className","children","src","profilePicture","alt","_jsxFileName","lineNumber","columnNumber","placeholder","username","ref","onSubmit","htmlFor","htmlColor","style","display","type","id","accept","onChange","target","files","_c","$RefreshReg$"],"sources":["/Users/gordon/Desktop/react/client/src/components/share/Share.jsx"],"sourcesContent":["import \"./share.css\"\nimport PermMediaIcon from '@mui/icons-material/PermMedia';\nimport LabelIcon from '@mui/icons-material/Label';\nimport PlaceIcon from '@mui/icons-material/Place';\nimport EmojiEmotionsIcon from '@mui/icons-material/EmojiEmotions';\nimport { useContext, useRef, useState } from \"react\";\nimport {AuthContext} from \"../../context/AuthContext\";\nimport axios from \"axios\";\n\n//IMPORTANT: for uploading images, will have to use CDN tool eg Amazon (S3?), Firebase \n\nexport default function Share() {\n  const {user} = useContext(AuthContext);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const desc = useRef();\n  const [file, setFile] = useState(null);\n\n  const submitHandler = async (e) => {\n    e.preventDefault()\n    const newPost = {\n      userId: user._id,\n      desc: desc.current.value,\n    };\n    // the following means: if there is a file, new FormData will be created, the file as well as its name will be indicated. And it will also 'try' to upload the file\n    // the following 'if' statement will have to be edited in the future. perhaps to adapt to another tool\n    if (file) {\n      const data = new FormData();\n      const fileName = file.name;\n      data.append(\"file\",file);\n      data.append(\"name\",fileName);\n      // line below will add the img to the newPost \n      newPost.img = fileName;\n      try {\n        // the new post with the attachment will be uploaded\n        await axios.post(\"/upload\", data); \n      } catch(err) {\n        console.log(err);\n      }\n    } \n    try {\n      // the new post with the words will be uploaded\n      await axios.post(\"/posts\", newPost);\n      // reload will refresh the page\n      // IMPORTANT: can also create a 'post' context and update 'post' state. Will need to research how to do this.\n      window.location.reload()\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  return (\n    <div className=\"share\">\n      <div className=\"shareWrapper\">\n        <div className=\"shareTop\">\n          <img src={user.profilePicture ? PF + user.profilePicture : PF+\"person/noAvatar.png\"} alt=\"\" className=\"shareProfileImg\"/>\n          {/* we can allow users to post their complaints. If he/she has insurance, no need for payment option. All covered by isnurance */}\n          <input placeholder={\"What is your main complaint \" + user.username + \"?\"} className=\"shareInput\" ref={desc}/>\n        </div>\n        <hr className=\"shareHr\"/>\n        <form className=\"shareBottom\" onSubmit={submitHandler}>\n          <div className=\"shareOptions\">\n            <label htmlFor=\"file\" className=\"shareOption\">\n              <PermMediaIcon htmlColor=\"tomato\" className=\"shareIcon\" />\n              <span className=\"shareOptionText\">Photo or Video</span>\n              {/* the following code accepts only the file types stated, and can upload only one file as 'files[0]' */}\n              <input style={{display:\"none\"}} type=\"file\" id=\"file\" accept = \".png,.jpg,.jpeg,.pdf\" onChange={(e)=>setFile(e.target.files[0])}/>\n            </label>\n            <div className=\"shareOption\">\n              <LabelIcon htmlColor=\"blue\" className=\"shareIcon\" />\n              <span className=\"shareOptionText\">Tag</span>\n            </div>\n            <div className=\"shareOption\">\n              <PlaceIcon htmlColor=\"green\" className=\"shareIcon\" />\n              <span className=\"shareOptionText\">Location</span>\n            </div>\n            <div className=\"shareOption\">\n              <EmojiEmotionsIcon htmlColor=\"goldenrod\" className=\"shareIcon\" />\n              <span className=\"shareOptionText\">Emotions</span>\n            </div>\n          </div>\n          <button className=\"shareButton\" type=\"submit\">Share</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,aAAa,MAAM,+BAA+B;AACzD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,SAASC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAAQC,WAAW,QAAO,2BAA2B;AACrD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM;IAACC;EAAI,CAAC,GAAGT,UAAU,CAACG,WAAW,CAAC;EACtC,MAAMO,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB;EAC9C,MAAMC,IAAI,GAAGb,MAAM,CAAC,CAAC;EACrB,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMe,aAAa,GAAG,MAAOC,CAAC,IAAK;IACjCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAEZ,IAAI,CAACa,GAAG;MAChBR,IAAI,EAAEA,IAAI,CAACS,OAAO,CAACC;IACrB,CAAC;IACD;IACA;IACA,IAAIT,IAAI,EAAE;MACR,MAAMU,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC3B,MAAMC,QAAQ,GAAGZ,IAAI,CAACa,IAAI;MAC1BH,IAAI,CAACI,MAAM,CAAC,MAAM,EAACd,IAAI,CAAC;MACxBU,IAAI,CAACI,MAAM,CAAC,MAAM,EAACF,QAAQ,CAAC;MAC5B;MACAP,OAAO,CAACU,GAAG,GAAGH,QAAQ;MACtB,IAAI;QACF;QACA,MAAMvB,KAAK,CAAC2B,IAAI,CAAC,SAAS,EAAEN,IAAI,CAAC;MACnC,CAAC,CAAC,OAAMO,GAAG,EAAE;QACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF;IACA,IAAI;MACF;MACA,MAAM5B,KAAK,CAAC2B,IAAI,CAAC,QAAQ,EAAEX,OAAO,CAAC;MACnC;MACA;MACAe,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAML,GAAG,EAAC;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAED,oBACE1B,OAAA;IAAKgC,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBjC,OAAA;MAAKgC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BjC,OAAA;QAAKgC,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBjC,OAAA;UAAKkC,GAAG,EAAE/B,IAAI,CAACgC,cAAc,GAAG/B,EAAE,GAAGD,IAAI,CAACgC,cAAc,GAAG/B,EAAE,GAAC,qBAAsB;UAACgC,GAAG,EAAC,EAAE;UAACJ,SAAS,EAAC;QAAiB;UAAAX,QAAA,EAAAgB,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAEzHvC,OAAA;UAAOwC,WAAW,EAAE,8BAA8B,GAAGrC,IAAI,CAACsC,QAAQ,GAAG,GAAI;UAACT,SAAS,EAAC,YAAY;UAACU,GAAG,EAAElC;QAAK;UAAAa,QAAA,EAAAgB,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAlB,QAAA,EAAAgB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1G,CAAC,eACNvC,OAAA;QAAIgC,SAAS,EAAC;MAAS;QAAAX,QAAA,EAAAgB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzBvC,OAAA;QAAMgC,SAAS,EAAC,aAAa;QAACW,QAAQ,EAAEhC,aAAc;QAAAsB,QAAA,gBACpDjC,OAAA;UAAKgC,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BjC,OAAA;YAAO4C,OAAO,EAAC,MAAM;YAACZ,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC3CjC,OAAA,CAACV,aAAa;cAACuD,SAAS,EAAC,QAAQ;cAACb,SAAS,EAAC;YAAW;cAAAX,QAAA,EAAAgB,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC1DvC,OAAA;cAAMgC,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAAc;cAAAZ,QAAA,EAAAgB,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAEvDvC,OAAA;cAAO8C,KAAK,EAAE;gBAACC,OAAO,EAAC;cAAM,CAAE;cAACC,IAAI,EAAC,MAAM;cAACC,EAAE,EAAC,MAAM;cAACC,MAAM,EAAG,sBAAsB;cAACC,QAAQ,EAAGvC,CAAC,IAAGF,OAAO,CAACE,CAAC,CAACwC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;YAAE;cAAAhC,QAAA,EAAAgB,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAlB,QAAA,EAAAgB,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7H,CAAC,eACRvC,OAAA;YAAKgC,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BjC,OAAA,CAACT,SAAS;cAACsD,SAAS,EAAC,MAAM;cAACb,SAAS,EAAC;YAAW;cAAAX,QAAA,EAAAgB,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACpDvC,OAAA;cAAMgC,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAAG;cAAAZ,QAAA,EAAAgB,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAlB,QAAA,EAAAgB,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,eACNvC,OAAA;YAAKgC,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BjC,OAAA,CAACR,SAAS;cAACqD,SAAS,EAAC,OAAO;cAACb,SAAS,EAAC;YAAW;cAAAX,QAAA,EAAAgB,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACrDvC,OAAA;cAAMgC,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAAQ;cAAAZ,QAAA,EAAAgB,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAlB,QAAA,EAAAgB,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC,eACNvC,OAAA;YAAKgC,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BjC,OAAA,CAACP,iBAAiB;cAACoD,SAAS,EAAC,WAAW;cAACb,SAAS,EAAC;YAAW;cAAAX,QAAA,EAAAgB,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACjEvC,OAAA;cAAMgC,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAAQ;cAAAZ,QAAA,EAAAgB,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAlB,QAAA,EAAAgB,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC;QAAA;UAAAlB,QAAA,EAAAgB,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNvC,OAAA;UAAQgC,SAAS,EAAC,aAAa;UAACgB,IAAI,EAAC,QAAQ;UAAAf,QAAA,EAAC;QAAK;UAAAZ,QAAA,EAAAgB,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAlB,QAAA,EAAAgB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAlB,QAAA,EAAAgB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAlB,QAAA,EAAAgB,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrC,EAAA,CA1EuBD,KAAK;AAAAqD,EAAA,GAALrD,KAAK;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}