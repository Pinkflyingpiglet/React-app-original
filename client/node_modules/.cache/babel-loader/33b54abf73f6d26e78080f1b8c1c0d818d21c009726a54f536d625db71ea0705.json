{"ast":null,"code":"var _jsxFileName = \"/Users/gordon/Desktop/react/client/src/components/feed/Feed.jsx\",\n  _s = $RefreshSig$();\nimport \"./feed.css\";\nimport Share from \"../share/Share\";\nimport Post from \"../post/Post\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\n//there's some issue with the loading of the profile page mainly due to \"Feed\"\n//the problem lies with parsing issues within the source code of 'timeago.js' and 'axios'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed({\n  username\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const res = username ? await axios.get(\"/posts/profile/\" + username) : await axios.get(\"posts/timeline/\" + user._id);\n      setPosts(res.data.sort((p1, p2) => {\n        return new Date(p2.createdAt) - new Date(p1.createdAt); // sorts the posts so that the latest one turns up first\n      }));\n    };\n\n    fetchPosts();\n  }, [username, user._id]);\n\n  //test\n  useEffect(() => {\n    if (username) {\n      const fetchPosts = async () => {\n        const res = username ? await axios.get(\"/posts/profile/\" + username) : await axios.get(\"posts/timeline/\" + user._id);\n        setPosts(res.data.sort((p1, p2) => {\n          return new Date(p2.createdAt) - new Date(p1.createdAt); // sorts the posts so that the latest one turns up first\n        }));\n      };\n\n      fetchPosts();\n    }\n  }, [username]);\n  //test\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedWrapper\",\n      children: [(!username || username === user.username) && /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 55\n      }, this), posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n        post: p\n      }, p._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Feed, \"vnB6yCWDTo+p8p2YgfgAU9tz8tw=\");\n_c = Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["Share","Post","useContext","useEffect","useState","axios","AuthContext","jsxDEV","_jsxDEV","Feed","username","_s","posts","setPosts","user","fetchPosts","res","get","_id","data","sort","p1","p2","Date","createdAt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","post","_c","$RefreshReg$"],"sources":["/Users/gordon/Desktop/react/client/src/components/feed/Feed.jsx"],"sourcesContent":["import \"./feed.css\"\nimport Share from \"../share/Share\"\nimport Post from \"../post/Post\"\nimport { useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\n//there's some issue with the loading of the profile page mainly due to \"Feed\"\n//the problem lies with parsing issues within the source code of 'timeago.js' and 'axios'\n\nexport default function Feed({username}) {\n  const [posts, setPosts] = useState([]);\n  const{user} = useContext(AuthContext);\n\n  useEffect(() =>{\n    const fetchPosts = async () =>{\n      const res = username \n        ? await axios.get(\"/posts/profile/\" + username)\n        : await axios.get(\"posts/timeline/\" + user._id);\n      setPosts(res.data.sort((p1,p2) => {\n        return new Date(p2.createdAt) - new Date(p1.createdAt); // sorts the posts so that the latest one turns up first\n      }));\n    };\n    fetchPosts();\n  },[username, user._id])\n\n  //test\n  useEffect(() =>{\n    if (username) { \n    const fetchPosts = async () =>{\n      const res = username \n        ? await axios.get(\"/posts/profile/\" + username)\n        : await axios.get(\"posts/timeline/\" + user._id);\n      setPosts(res.data.sort((p1,p2) => {\n        return new Date(p2.createdAt) - new Date(p1.createdAt); // sorts the posts so that the latest one turns up first\n      }));\n    };\n    fetchPosts();\n  }},[username])\n  //test\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feedWrapper\">\n        {(!username || username === user.username) && <Share/>}\n        {posts.map((p)=> (\n          <Post key={p._id} post={p}/>\n        ))}\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}